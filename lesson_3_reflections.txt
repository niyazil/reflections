When would you want to use a remote repository rather than keeping all your work local?
This would be useful when you want to collaborate on the project with others.

Why might you want to always pull changes manually rather than having 
Git automatically stay up-to-date with your remote repository?
You might not be ready to incorporatethose changes into your local
version. Maybe the version you have released to the public is not the 
version you want to be using on your own machine.

Describe the differences between forks, clones, and branches. When would
 you use one instead of another?
A fork is a Github copy of an existing Github repository including all
branches. A clone is a local copy of a local or Github repository
including all branches. A branch is a copy of a repository up to a
certain node in its commit history, after which the histories of the two
branches may diverge. A fork is used to make a copy of someone else's
Github repository for which you do not have commiting privelege. The
clone can be used to copy repositries, whether they be hosted on Github 
or locally, to yor local workspace. A branch is needed when you wish to 
make another version of your project while retaining the original 
project separately. 

What is the benefit of having a copy of the last known state of the 
remote stored locally?
To be able to sort out merging conflicts more easily.

How would you collaborate without using Git or GitHub? What would be 
easier, and what would be harder?
Without using Github, you would have to exchange files manually. 
Manually doing this is cumbersome. Having a platform for doing it makes 
the process more efficient and less messy. 

When would you want to make changes in a separate branch rather than 
directly in master? What benefits does each approach have?
When you are collaborating with people on a project, you would want to 
make the changes in a separate branch so that you could then make pull 
requests on it. You can then get feedback on it before merging it to 
your master branch. This is a more involved process compared to making 
changes in the master branch directly, but it may prevent complications 
occurring further on.